Ext.define('CoolerIoTMobile.Templates', {
	singleton: true,
	MenuItems: new Ext.XTemplate("<span class='menu-list-items'><img src='{ImgURL}' ></img><div>{SlideMenu}</div></span>"),
	ScanningDeviceItem: new Ext.XTemplate(
		'<div class="scandevice-list"><table style="width:100%">',
		'<tr><td class="location-list-title">{DeviceName}</td><tpl if="Ext.os.name.toLowerCase() !== CoolerIoTMobile.Enums.DeviceType.Ios"><td><b style ="font-size: 12px;">{StandByStatus}<b></td></tpl></tr>',
		'<tpl if="Ext.os.name.toLowerCase() !== CoolerIoTMobile.Enums.DeviceType.Ios"><tr><td class="scandevice-list-label-text">MAC: {MacAddress} </td><td><b style ="font-size: 12px;">Door: {DoorStatus}<b></td></tr></tpl>',
		'<tpl if="Ext.os.name.toLowerCase() !== CoolerIoTMobile.Enums.DeviceType.Ios"><tr><td></td><td><b style ="font-size: 12px;">{HealthText}<b></td></tr></tpl>',
		'<tr><td class="scandevice-list-label-text">RSSI: {Rssi}</td> <tpl if="Ext.os.name.toLowerCase() !== CoolerIoTMobile.Enums.DeviceType.Ios"><td><b style ="font-size: 12px;">{MotionText}<b></td></tr></tpl>',
		'<tpl if="Ext.os.name.toLowerCase() !== CoolerIoTMobile.Enums.DeviceType.Ios"><tr><td class="scandevice-list-label-text">Major: {Major}, Minor: {Minor} </td><td><b style ="font-size: 12px;">{PictureText}<b></td></tr></tpl>',
		'<tpl if="Ext.os.name.toLowerCase() !== CoolerIoTMobile.Enums.DeviceType.Ios"><tr><td></td><td><b style ="font-size: 12px;">{ImageText}<b></td></tr></tpl>',
		'<tpl if="Ext.os.name.toLowerCase() !== CoolerIoTMobile.Enums.DeviceType.Ios"><tr class="scandevice-list-label-text"><td colspan="2">UUID: {[CoolerIoTMobile.util.Renderers.getUUIDText(values)]}</td></tr></tpl>',
        '</table></div>'),
	AssetLocationList: new Ext.XTemplate(
	'<div class="device-data-list-container"><table style="width:100%">',
	'<tr><td>{Name}</td>',
	'</tr>',
	'</table></div>'),
	AssetList: new Ext.XTemplate(
	'<div class="device-data-list-container"><table style="width:100%">',
	'<tr><td>{SerialNumber}</td>',
	'</tr>',
	'</table></div>'),
	DeviceDataList: new Ext.XTemplate(
		'<div class="device-data-list-container"><table style="width:100%">',
		'<tr><td class="device-data-title">Id: {EventId}</td>',
        '<td>{[CoolerIoTMobile.util.Renderers.renderDeviceData(values)]}</td>',
        '</tr>',
        '</table></div>'),
	DeviceStatusItem: new Ext.XTemplate(
		'<div style = "color:White;background-color:#3498db;font-size:.8em; padding: 10px;"><span>{DeviceName}</span>',
		'<tpl if="Ext.os.name.toLowerCase() !== CoolerIoTMobile.Enums.DeviceType.Ios"><span style="float: right;">{MacAddress}</span></tpl></div>',
		'<div class="default-font-color" style="padding: 1em;"><table style="width:100%;font-size: small;padding: 5px">',
		'<tpl if="Ext.os.name.toLowerCase() !== CoolerIoTMobile.Enums.DeviceType.Ios"><tr><td colspan="7">UUID: <b>{[CoolerIoTMobile.util.Renderers.getUUIDText(values)]}</b></td></tr></tpl>',
        '<tr id = "Rssi"><td>TX Power: <span class="normal-font-blue-color" id="deviceRssi"><b>{Rssi}</b> &nbsp;&nbsp;</span><span class="edit-device-data" id="editDeviceDetails">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>',
        '<tr><td colspan="8">Firmware:  <span class="normal-font-blue-color"><b>{FirmwareNumber}</b></span></td></tr>',
		'</table></div>'),

	PowerConsumptionDetail: new Ext.XTemplate(
		'<div class="data-item-container assetContainer">',
		'<table border = "1" style="width:100%">',
		'<tr valign="middel" style="height:2em">',
			'<td><div class="cooler-list-label-power-bold">VOLTAGE</div></td>',
			'<td><div class="cooler-list-label-power-bold">CURRENT</div></td>',
			'<td><div class="cooler-list-label-power-bold">POWER</div></td>',
			'<td><div class="cooler-list-label-power-bold">ENERGY</div></td>',
			'<td><div class="cooler-list-label-power-bold">ENERGY</div></td>',
			'<td><div class="cooler-list-label-power-bold">ENERGY</div></td>',
			'<td><div class="cooler-list-label-power-bold">FREQUENCY</div></td>',
		'</tr>',
		'<tr style="height:2em">',
			'<td><div class="cooler-list-label-power">{[Math.round(values.VRMS)]} <span class="cooler-list-label-power">V RMS</span></div></td>',
			'<td><div class="cooler-list-label-power">{[Math.round(values.IRMS)]} <span class="cooler-list-label-power">A RMS</span></div></td>',
			'<td><div class="cooler-list-label-power">{[values.Power.toFixed(2)]} <span class="cooler-list-label-power">W</span></div></td>',
			'<td><div class="cooler-list-label-power">{[values.Energy.toFixed(2)]} <span class="cooler-list-label-power">WH</span></div></td>',
			'<td><div class="cooler-list-label-power">{[values.DailyAvgEnergy.toFixed(2)]} <span class="cooler-list-label-power">WH</span></div></td>',
			'<td><div class="cooler-list-label-power">{[values.LastWeekEnergy.toFixed(2)]} <span class="cooler-list-label-power">WH</span></div></td>',
			'<td><div class="cooler-list-label-power">{[Math.round(values.Freq)]} <span class="cooler-list-label-power">Hz</span></div></td>',
		'</tr>',
		'<tr style="height:2em">',
			'<td><div class="cooler-list-label-power">LATEST</div></td>',
			'<td><div class="cooler-list-label-power">LATEST</div></td>',
			'<td><div class="cooler-list-label-power">ACTIVE</div></td>',
			'<td><div class="cooler-list-label-power">ACTIVE</div></td>',
			'<td><div class="cooler-list-label-power">TODAY AVERAGE</div></td>',
			'<td><div class="cooler-list-label-power">LAST 7 DAYS</div></td>',
			'<td><div class="cooler-list-label-power">LATEST</div></td>',
		'</tr>',
		'</table>',
		'</div>'),
	GPSDetail: new Ext.XTemplate(
		'<div class="data-item-container">',
		'<table style="width:100%;">',
		'<tr class="gpsColumn">',
			'<td height="30"><div class="cooler-list-label-gps gpsHeader">GPS Coordinates Last Received</div>',
			'<div class="cooler-list-label-gps-value">{[CoolerIoTMobile.util.Renderers.dateRendererWithTimeZone(values.GPSreceived,"M/d/y h:i A", true)]}</div></td>',
		'</tr>',
		'<tr class="gpsColumn">',
			'<td height="30"><div class="cooler-list-label-gps gpsHeader">Cell ID Last Received</div>',
			'<div class="cooler-list-label-gps-value">{[CoolerIoTMobile.util.Renderers.dateRendererWithTimeZone(values.CellIdReceived,"M/d/y h:i A", true)]}</div></td>',
		'</tr>',
		'<tr class="gpsColumn">',
			'<td height="30"><div class="cooler-list-label-gps gpsHeader">Current Latitude, Longitude</div>',
			'<div class="cooler-list-label-gps-value">Latitude: {Latitude}, Longitude: {Longitude}</div></td>',
		'</tr>',
		'<tr class="gpsColumn">',
			'<td height="30"><div class="cooler-list-label-gps gpsHeader">Displacement from Outlet</div>',
			'<div class="cooler-list-label-gps-value ">{DisplacementText}</div></td>',
		'</tr>',
		'<tr>',
			'<td height="30"><div class="cooler-list-label-gps gpsHeader">Current Address</div>',
			'<div class="cooler-list-label-gps-value">{Address}</div></td>',
		'</tr>',
		'</table>',
		'</div>'),
	EnvironmentSummary: new Ext.XTemplate(
		'<div class="data-item-container">',
		'<table style="width:100%">',
		'<tr valign="top">',
			'<td></td>',
			'<td><div class="cooler-list-label">LATEST</div></td>',
			'<td><div class="cooler-list-label">LAST 7 DAYS MIN</div></td>',
			'<td><div class="cooler-list-label">LAST 7 DAYS MAX</div></td>',
			'<td><div class="cooler-list-label">TODAY MIN</div></td>',
			'<td><div class="cooler-list-label">TODAY MAX</div></td>',
		'</tr>',
		'<tr>',
			'<td>{[CoolerIoTMobile.util.Renderers.getEnvTemperatureImg(values)]}</td>',
			'<td><div class="cooler-list-label-med">{[values.EnvTemperature.toFixed(1)]} &deg;C</div></td>',
			'<td><div class="cooler-list-label-med">{[values.LastWeekEnvTempMin.toFixed(1)]}&deg; <span class="cooler-list-label">C</span></div></td>',
			'<td><div class="cooler-list-label-med">{[values.LastWeekEnvTempMax.toFixed(1)]}&deg; <span class="cooler-list-label">C</span></div></td>',
			'<td><div class="cooler-list-label-med">{[values.EnvTempMin.toFixed(1)]}&deg; <span class="cooler-list-label">C</span></div></td>',
			'<td><div class="cooler-list-label-med">{[values.EnvTempMax.toFixed(1)]}&deg; <span class="cooler-list-label">C</span></div></td>',
		'</tr>',
		'<tr>',
			'<td>{[CoolerIoTMobile.util.Renderers.getEnvHumidityImg(values)]}</td>',
			'<td><div class="cooler-list-label-med">{EnvHumidity} <span class="cooler-list-label">%RH</span></div></td>',
			'<td><div class="cooler-list-label-med">{[values.LastWeekEnvHumidityMin]} <span class="cooler-list-label">%RH</span></div></td>',
			'<td><div class="cooler-list-label-med">{[values.LastWeekEnvHumidityMax]} <span class="cooler-list-label">%RH</span></div></td>',
			'<td><div class="cooler-list-label-med">{[values.EnvHumidityMin]} <span class="cooler-list-label">%RH</span></div></td>',
			'<td><div class="cooler-list-label-med">{[values.EnvHumidityMax]} <span class="cooler-list-label">%RH</span></div></td>',
		'</tr>',
		'</table>',
		'</div>'),
	CoolerDetail: new Ext.XTemplate('<div class="data-item-container">',
					'<table style="width:100%">',
					'<tr>',
					'<td rowspan="2">',
					'<tpl if="DeviceStatus == CoolerIoTMobile.Enums.DeviceStatus.Found"><div class="cooler-list-item-device-status-base cooler-list-image-found">&nbsp;</div></tpl>',
					'<tpl if="DeviceStatus == CoolerIoTMobile.Enums.DeviceStatus.NotFound"><div class="cooler-list-item-device-status-base cooler-list-image-notfound">&nbsp;</div></tpl>',
					'<tpl if="AssetTypeId !== CoolerIoTMobile.Enums.AssetType.WendingMachine && OpenMissingAlert == 0"><div class="cooler-list-image-container cooler-list-image{[CoolerIoTMobile.util.Renderers.coolerImageType(values)]} ">&nbsp;</div></tpl>',
					'<tpl if="AssetTypeId === CoolerIoTMobile.Enums.AssetType.WendingMachine && OpenMissingAlert == 0"><div class="cooler-list-image-container wending-machine-list-image">&nbsp;</div></tpl>',
					'<tpl if="OpenMissingAlert &gt; 0"><div class="cooler-list-image-small missing-cooler{[CoolerIoTMobile.util.Renderers.coolerImageType(values)]} cooler-list-image-small-left">&nbsp;</div><div><b>Missing</b></div></tpl>',
					'</td>',
					'<td rowspan="2"><div>',
						'<tpl if="OpenHealthAlert &gt; 0"><div class="assetIssue">H</div></tpl>',
						'<tpl if="OpenMissingAlert  &gt; 0"><div class="assetIssue">X</div></tpl>',
						'<tpl if="OpenPurityAlert &gt; 0"><div class="assetIssue">P</div></tpl>',
						'<tpl if="OpenMovementAlert &gt; 0"><div class="assetIssue">M</div></tpl>',
						'<tpl if="OpenStockAlert &gt; 0"><div class="assetIssue">O</div></tpl>',
						'</div>',
					'</td>',
					'<td>{[CoolerIoTMobile.util.Renderers.getTemperatureImg(values)]}</td>',
					'<td>{[CoolerIoTMobile.util.Renderers.getLightImg(values)]}</td>',
					'<td>{[CoolerIoTMobile.util.Renderers.getHumidityImg(values)]}</td>',
					'<td><tpl if="SmartDeviceTypeId !== CoolerIoTMobile.Enums.SmartDeviceType.SmartTagV1">{[CoolerIoTMobile.util.Renderers.getPurityImg(values)]}</tpl></td>',
					'<td><tpl if="SmartDeviceTypeId !== CoolerIoTMobile.Enums.SmartDeviceType.SmartTagV1">{[CoolerIoTMobile.util.Renderers.getStockImg(values)]}</tpl></td>',
					'<tpl if="SmartDeviceTypeId == CoolerIoTMobile.Enums.SmartDeviceType.SmartHub"><td>{[CoolerIoTMobile.util.Renderers.getPowerImg(values)]}</td></tpl>',
					'</tr>',
					'<tr>',
					'<td><div class="cooler-list-label">{Temperature}</div></td>',
					'<td><div class="cooler-list-label">{[CoolerIoTMobile.util.Renderers.getLightIntensity(values)]}</div></td>',
					'<td><div class="cooler-list-label">{Humidity}</div></td>',
					'<td><tpl if="SmartDeviceTypeId !== CoolerIoTMobile.Enums.SmartDeviceType.SmartTagV1">{[CoolerIoTMobile.util.Renderers.getPurityPerc(values)]}</tpl></td>',
					'<td><tpl if="SmartDeviceTypeId !== CoolerIoTMobile.Enums.SmartDeviceType.SmartTagV1">{[CoolerIoTMobile.util.Renderers.getStockPerc(values)]}</tpl></td>',
					'<tpl if="SmartDeviceTypeId == CoolerIoTMobile.Enums.SmartDeviceType.SmartHub"><td><div class="cooler-list-label">{[CoolerIoTMobile.util.Renderers.getPowerText(values)]}</td></div></tpl>',
					'</tr>',
					'<tr>',
					'<td>{[CoolerIoTMobile.util.Renderers.dateRenderer(values.LastPing, "d-M h:i A")]}</td>',
					'<td></td>',
					'<td><div class="cooler-list-label">{[CoolerIoTMobile.util.Renderers.getTemperatureText(values)]}</div></td>',
					'<td><div class="cooler-list-label">{[CoolerIoTMobile.util.Renderers.getLightIntensityText(values)]}</div></td>',
					'<td><div class="cooler-list-label">{[CoolerIoTMobile.util.Renderers.getHumidityText(values)]}</div></td>',
					'<td><tpl if="SmartDeviceTypeId !== CoolerIoTMobile.Enums.SmartDeviceType.SmartTagV1"><div class="cooler-list-label">{[CoolerIoTMobile.util.Renderers.getPurityPercText(values)]}</div></tpl></td>',
					'<td><tpl if="SmartDeviceTypeId !== CoolerIoTMobile.Enums.SmartDeviceType.SmartTagV1">{[CoolerIoTMobile.util.Renderers.getStockPercText(values)]}</tpl></td>',
					'</tr>',
					'</table>',
					'</div>'),
	DebugDeviceDetailInfo: new Ext.XTemplate(
				'<div>',
				'<div class = "device-heading-div"><div style="padding: 10px;" >STATUS</div></div>',
				'<div style="padding: 15px;" class="device-name-selection device-name-title" >',
				'<table width="100%" >',
				'<tpl if="Ext.os.name.toLowerCase() !== CoolerIoTMobile.Enums.DeviceType.Ios"><tr class="row-border-bottom" id = "StandByModeValue">',
				'<td class="default-font-color">Standby</td><td align="right" id="standbySwitch"><input type="checkbox" style="width:1.5em;height:2em" <tpl if="StandByModeValue == 1"> checked="checked"</tpl> name="standBy" id="standByCheckBox"></td>',
				'</tr></tpl>',
				'<tpl if="IsSmartVision == true && Ext.os.name.toLowerCase() !== CoolerIoTMobile.Enums.DeviceType.Ios">',
				'<tr class="row-border-bottom" id = "EnableTakePicture">',
				'<td class="default-font-color">Take Picture</td><td align="right" id="takepictureswitch"><input type="checkbox" style="width:1.5em;height:2em" <tpl if="EnableTakePicture == 01"> checked="checked"</tpl> name="takepicture" id="takepictureCheckBox"></td>',
				'</tr>',
				'</tpl>',
				'<tr class="row-border-bottom" id = "CurentTime">',
				'<td colspan="2" class="default-font-color"><div class="merged-column-row"><div style="display: table-cell;vertical-align: middle;">Current Time</div><div style="float: right;padding-right: 1em;color:#61A7A4;text-align: right;"><b>{CurentTime} at</b><br/><b>{[Ext.Date.format(new Date(), "m/d/Y h:i:s A")]}</b></div><div id="refreshButton" class="refresh-button-class">&nbsp</div></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id = "CurrentEventIndex">',
				'<td class="default-font-color">Curret Event Index</td><td align="right"><span id="currentEventIndex"><b>{CurrentEventIndex}</b></sapn></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="RangeOfEventId">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Last Read Event Index</div><div  class="second-column-size"><b>{RangeOfEventId}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="AdvertisingPeriodMilliseconds"> ',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Advertisement  Frequency (Milliseconds)</div><div class="second-column-size"><b>{AdvertisingPeriodMilliseconds}</b </div></td>',
				'</tr>',
				'<tr id = "PeriodicIntervalMinutes">',
				'<td class="default-font-color"  colspan="2"><div class="first-column-size">Heartbeat Interval (In Minutes)</div><div  class="second-column-size"><b>{PeriodicIntervalMinutes}</b></div></td>',
				'</tr>',
				'</table>',
				'</div>',
				'</div>',

				'<div style="padding-top: 10px;">',
				'<div class="device-heading-div"><div style="padding: 10px;" >THRESHOLDS</div></div>',
				'<div style="padding: 15px;" class="device-name-selection device-name-title">',
				'<table width="100%" >',
				'<tr class="row-border-bottom" id="MovementThresholdG">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Movement G (Upper Limit)</div><div  class="second-column-size"><b>{MovementThresholdG}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="MovementThresholdTime">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Movement Time (Upper Limit)</div><div  class="second-column-size"><b>{MovementThresholdTime}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="TemperatureOutOfThreashold">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Temperature (Upper Limit)</div><div  class="second-column-size"><b>{TemperatureOutOfThreashold}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="LightOutOfThreashold">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Ambient Light (Upper Limit)</div><div  class="second-column-size"><b>{LightOutOfThreashold}</b></div></td>',
				'</tr>',
				'<tr id="HumidityOutOfThreashold"> ',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Humidity (Upper Limit)</div><div  class="second-column-size"><b>{HumidityOutOfThreashold}</b></div></td>',
				'</tr>',
				'</table>',
				'</div>',
				'</div>',

				'<tpl if="IsSmartVision == true">',
				'<div style="padding-top: 10px;">',
				'<div class="device-heading-div"><div style="padding: 10px;width: 40%;display: inline-block;" >CAMERA</div> <div style="padding: 10px;float:right;display: block;float: right;" id= "ResetCameraSetting">Load Defaults</div></div>',
				'<div style="padding: 15px;" class="device-name-selection device-name-title">',
				'<table width="100%" >',
				'<tr class="row-border-bottom" id = "Angle">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Angle</div><div class="second-column-size"><b>{Angle}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="Brightness">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Brightness</div><div class="second-column-size"><b>{Brightness}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="Contrast">',
				'<td class="default-font-color"colspan="2"><div class="first-column-size">Contrast</div><div class="second-column-size"><b>{Contrast}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="Saturation">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Saturation</div><div class="second-column-size"><b>{Saturation}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="ShutterSpeed">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Shutter Speed</div><div class="second-column-size"><b>{ShutterSpeed}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="CameraQuality">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Camera Quality</div><div class="second-column-size"><b>{CameraQuality}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="Effect">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Effect</div><div class="second-column-size"><b>{Effect}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="LightMode">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Light Mode</div><div class="second-column-size"><b>{LightMode}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="CameraClock">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Camera Clock</div><div class="second-column-size"><b>{CameraClock}</b></div></td>',
				'</tr>',
				'<tr class="row-border-bottom" id="Cdly">',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Cdly</div><div class="second-column-size"><b>{Cdly}</b></div></td>',
				'</tr>',
				'<tr id="Drive"> ',
				'<td class="default-font-color" colspan="2"><div class="first-column-size">Drive</div><div class="second-column-size"><b>{Drive}</b></div></td>',
				'</tr>',
				'</table>',
				'</div>',
				'</div>',
				'</tpl>'
				),
	graphTpl: new Ext.XTemplate(
				'<div class="assetContainer">',
					'<tpl if="records">',
						'<table border = "1" style="width: 100%;" >',
						'<tbody >',
							'<tr style = "height: 2em;">',
								'<td id={[CoolerIoTMobile.util.Renderers.getLinkId(values, 0)]} class="templateWidth">Date</td>',
								'<td id={[CoolerIoTMobile.util.Renderers.getLinkId(values, 3)]} class="templateWidth" style = "width: 20%;">Door Open close count</td>',
								'<td id={[CoolerIoTMobile.util.Renderers.getLinkId(values, 1)]} class="templateWidth">Temp.</td>',
								'<td class="templateWidth">Planogram</td>',
								'<td class="templateWidth">Purity</td>',
								'<td class="templateWidth">Front Stock </td>',
								'<td class="templateWidth">Movement</td>',
							'</tr>',
								'<tpl for="records">',
										'<tr style = "height: 2em;">',
											'<td  id={[CoolerIoTMobile.util.Renderers.getLinkId(values, 0)]} class="templateWidth"><div class= "cooler-list-labelblack" style="font-size: small;">{[CoolerIoTMobile.util.Renderers.formatDate(values.Date)]}</div></td>',
											'<td id={[CoolerIoTMobile.util.Renderers.getLinkId(values,3)]} class="templateWidth"><div class = "button-font-color-black"style="width:100%; height:100%"><div no-margins="" style="width:30%;height:100%;font-size: small;float: left">{DoorOpenCount}</div><div style="width:50%; height:70%; float:left"><div style="width:{DoorGraphPercentage}%;height:1em;background-color:{DoorColor};"></div></div></div></td>',
											'<tpl if="CoolerIoTMobile.util.Renderers.checkCondition(values,1,1) == true"><td id={[CoolerIoTMobile.util.Renderers.getLinkId(values,1)]} class="templateWidth">',
											'<img src="./resources/icons/circle_red.png"></td></tpl>',
											'<tpl if="CoolerIoTMobile.util.Renderers.checkCondition(values,2,1) == true"><td id={[CoolerIoTMobile.util.Renderers.getLinkId(values,1)]} class="templateWidth">',
											'<img src="./resources/icons/circle_green.png"></td></tpl>',
											'<tpl if="CoolerIoTMobile.util.Renderers.checkCondition(values,3,1) == true"><td  class="templateWidth">',
											'<img src="./resources/icons/na.png"></td></tpl>',

											'<tpl if="values.PlanogramIssues"><td class="templateWidth">',
											'<img src="./resources/icons/circle_red.png"></td></tpl>',
											'<tpl if="!values.PlanogramIssues"><td class="templateWidth">',
											'<img src="./resources/icons/circle_green.png"></td></tpl>',

											'<tpl if="values.PurityIssues && values.HasPurityData"><td class="templateWidth">',
											'<img src="./resources/icons/circle_red.png"></td></tpl>',
											'<tpl if="!values.PurityIssues  && values.HasPurityData"><td class="templateWidth">',
											'<img src="./resources/icons/circle_green.png"></td></tpl>',
											'<tpl if="!values.HasPurityData"><td  class="templateWidth">',
											'<img src="./resources/icons/na.png"></td></tpl>',

											'<tpl if="values.FrontStockIssues"><td class="templateWidth">',
											'<img src="./resources/icons/circle_red.png"></td></tpl>',
											'<tpl if="!values.FrontStockIssues"><td class="templateWidth">',
											'<img src="./resources/icons/circle_green.png"></td></tpl>',

											'<tpl if="CoolerIoTMobile.util.Renderers.checkCondition(values,1,4) == true"><td class="templateWidth">',
											'<img src="./resources/icons/circle_red.png"></td></tpl>',
											'<tpl if="CoolerIoTMobile.util.Renderers.checkCondition(values,2,4) == true"><td class="templateWidth">',
											'<img src="./resources/icons/circle_green.png"></td></tpl>',
											'<tpl if="CoolerIoTMobile.util.Renderers.checkCondition(values,3,4) == true"><td class="templateWidth">',
											'<img src="./resources/icons/na.png"></td></tpl>',
										'</tr>',
									'</tpl>',
								'</tbody>',
							'</table>',
						'</tpl>',
					'</div>'
		),
	planogram: new Ext.XTemplate(
				'<div class="rectangle-red" >',
					'<div class="productDetailText">{title}</div>',
				'</div>',
				'<tpl for="shelves">',
					'<div class="rectangle-grey">',
						'<div class="productImage">',
							'<tpl for="values.products">',
								'<img src ={thumbnail} onerror="this.src = \'./resources/images/imageNotFound.png\'" />',
							'</tpl>',
						'</div>',
					'</div>',
				'</tpl>',
				'<div class="rectangle-black" >',
					'<div class="rectangle-black-grey"></div>',
				'</div>',
				'{[this.setCarouselHeight(values)]}',
				{
					setCarouselHeight: function (values) {
						var planogramContainer = Ext.ComponentQuery.query('[itemId=product-distribution-data]')[0];
						planogramContainer.setHeight(((values.shelves.length + 2) * 14 + 6) + 'vh');

					}
				}
			),
	Alert: new Ext.XTemplate(
		'<div class="asset-alert">',
		'<div class="assetAlertHeaderTop">',
			'<div class="col-xs-2-5">',
				'<div class="alertHeader">',
					'<div class="header">Open</div><div class="header subHeader">{record.OperAlerts}</div>',
				'</div>',
			'</div>',
			'<div class="col-xs-2-5">',
				'<div class="alertHeader">',
					'<div class="header">New Today</div><div class="subHeader">{record.NewToday}</div>',
				'</div>',
			'</div>',
			'<div class="col-xs-2-5">',
				'<div class="alertHeader">',
					'<div class="header">Not Acknowledged</div><div class="subHeader">{record.AlertsNotACknowledge}</div>',
				'</div>',
			'</div>',
			'<div class="col-xs-2-5">',
				'<div class="alertHeader">',
					'<div class="header">Closed Today</div><div class="subHeader">{record.ClosedToday}</div>',
				'</div>',
			'</div>',
		'</div>',
		'<div class="activeHeader">',
				'<div><img src="./resources/icons/asset/CheckMark.png" class="assetAlertHeader"></img><div class="assetAlertHeaderText">ACTIVE ALERTS</div></div>',
			'</div>',
		'<div class="activeAlertHeader">',
			'<tpl for="activeAlerts">',
			   '<div style="height:100px">',
				'<div style="width:15vw; float:left;"><img src="{[CoolerIoTMobile.util.Renderers.alertType(values.AlertTypeImage)]}" class="assetAlertTypeIcon"></img></div>',
					'<div class="activeSubHeader">',
												'<div class="assetAlertType">{[values.AlertDescription]}<tpl if="CoolerIoTMobile.util.Renderers.alertPriority(values.PriorityId,4225) == true"><span class="priority priorityLow">Low</span></tpl><tpl if="CoolerIoTMobile.util.Renderers.alertPriority(values.PriorityId, 4226) == true"><span class="priority priorityMedium">Medium</span></tpl><tpl if="CoolerIoTMobile.util.Renderers.alertPriority(values.PriorityId, 4227) == true"><span class="priority priorityMedium">High</span></tpl></div>',
						'<div class="assetAlertTypeInfo">{[values.AlertType]}</div>',
						'<span class="assetAlertTypeDate">{[values.AlertAt]}</span><span style="padding-left: 20px;" class="assetAlertTypeDate">{[values.Period]}</span>',
					'</div>',
			   '</div>',
		'</tpl>',
		  '</div>',
		'<div class="closedHeader">',
			'<div><img src="./resources/icons/asset/ClosedIcon.png" class="assetAlertHeader"></img><div class="assetAlertHeaderText">CLOSED ALERTS</div></div>',
			'</div>',
		'<div class="closedAlertHeader">',
		'<tpl for="closedAlerts">',
		'<div style="height:100px">',
				'<div style="width:15vw; float:left;"><img src="{[CoolerIoTMobile.util.Renderers.alertType(values.AlertTypeImage)]}" class="assetAlertTypeIcon"></img></div>',
					'<div class="activeSubHeader">',
						'<div class="assetAlertType">{[values.AlertDescription]}<tpl if="CoolerIoTMobile.util.Renderers.alertPriority(values.PriorityId,4225) == true"><span class="priority priorityLow">Low</span></tpl><tpl if="CoolerIoTMobile.util.Renderers.alertPriority(values.PriorityId, 4226) == true"><span class="priority priorityMedium">Medium</span></tpl><tpl if="CoolerIoTMobile.util.Renderers.alertPriority(values.PriorityId, 4227) == true"><span class="priority priorityMedium">High</span></tpl></div>',
						'<div class="assetAlertTypeInfo">{[values.AlertText]}</div>',
						'<span class="assetAlertTypeDate">{[values.AlertAt]}</span><span style="padding-left: 20px;" class="assetAlertTypeDate">{[values.Period]}</span>',
					'</div>',
			   '</div>',
		'</tpl>',
		'</div>',
	'</div>'
	),
	ProductImages: new Ext.XTemplate('<tpl for=".">',
		'<div class ="productImageHeader">',
		'<img width = "100%" src = {imageUrl} style = "padding: 0.3em;" />',
		 '<div><div style ="font-size: 0.6em;">{date}</div>',
		 '</div></div>',
		'</tpl>'
		),
	ProductOpportunityPlanogram: new Ext.XTemplate(
		'<div class="asset-detail-container">',
				'<ul class="cooleriot-detail-planogram-view assetContainer">',
						'<li class="cooleriot-display-table asset-first-row">',
							'<span class="cooleriot-table-cell text-center iot-col-16 asset-planogrm-border">',
								'<span class="iot-detail-large-span">',
									'<span class=" iot-detail-icon iot-planogram3-icon"></span>',
								'</span>',
							'</span>',
							'<span class="cooleriot-table-cell text-center iot-col-16 asset-planogrm-border">',
								'<span class="iot-detail-large-span">',
									'<span class=" iot-purityplanogram-icon"></span>',
								'</span>',
							'</span>',
							'<span class="cooleriot-table-cell text-center iot-col-16 asset-planogrm-border">',
								'<span class="iot-detail-large-span">',
									'<span class=" iot-stockplanogram-icon"></span>',
								'</span>',
							'</span>',
						'</li>',
						'<li class="cooleriot-display-table asset-second-row">',
							'<span class="cooleriot-table-cell text-center iot-col-16 asset-planogrm-border">100%</span>',
							'<span class="cooleriot-table-cell text-center iot-col-16 asset-planogrm-border">{[CoolerIoTMobile.util.Renderers.getPurityPerc(values)]}</span>',
							'<span class="cooleriot-table-cell text-center iot-col-16 asset-planogrm-border">{[CoolerIoTMobile.util.Renderers.getStockPerc(values)]}</span>',
						'</li>',
				'</ul></div>'
		)
});